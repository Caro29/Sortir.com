<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'translation.reader' shared service.

include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Reader\\TranslationReaderInterface.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Reader\\TranslationReader.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Loader\\LoaderInterface.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Loader\\ArrayLoader.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Loader\\FileLoader.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Loader\\PhpFileLoader.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Loader\\YamlFileLoader.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Loader\\XliffFileLoader.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Loader\\PoFileLoader.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Loader\\MoFileLoader.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Loader\\QtFileLoader.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Loader\\CsvFileLoader.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Loader\\IcuResFileLoader.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Loader\\IcuDatFileLoader.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Loader\\IniFileLoader.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\translation\\Loader\\JsonFileLoader.php';

$this->services['translation.reader'] = $instance = new \Symfony\Component\Translation\Reader\TranslationReader();

$a = ${($_ = isset($this->services['translation.loader.yml']) ? $this->services['translation.loader.yml'] : ($this->services['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader())) && false ?: '_'};
$b = ${($_ = isset($this->services['translation.loader.xliff']) ? $this->services['translation.loader.xliff'] : ($this->services['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader())) && false ?: '_'};

$instance->addLoader('php', ${($_ = isset($this->services['translation.loader.php']) ? $this->services['translation.loader.php'] : ($this->services['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader())) && false ?: '_'});
$instance->addLoader('yaml', $a);
$instance->addLoader('yml', $a);
$instance->addLoader('xlf', $b);
$instance->addLoader('xliff', $b);
$instance->addLoader('po', ${($_ = isset($this->services['translation.loader.po']) ? $this->services['translation.loader.po'] : ($this->services['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader())) && false ?: '_'});
$instance->addLoader('mo', ${($_ = isset($this->services['translation.loader.mo']) ? $this->services['translation.loader.mo'] : ($this->services['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader())) && false ?: '_'});
$instance->addLoader('ts', ${($_ = isset($this->services['translation.loader.qt']) ? $this->services['translation.loader.qt'] : ($this->services['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader())) && false ?: '_'});
$instance->addLoader('csv', ${($_ = isset($this->services['translation.loader.csv']) ? $this->services['translation.loader.csv'] : ($this->services['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader())) && false ?: '_'});
$instance->addLoader('res', ${($_ = isset($this->services['translation.loader.res']) ? $this->services['translation.loader.res'] : ($this->services['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader())) && false ?: '_'});
$instance->addLoader('dat', ${($_ = isset($this->services['translation.loader.dat']) ? $this->services['translation.loader.dat'] : ($this->services['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader())) && false ?: '_'});
$instance->addLoader('ini', ${($_ = isset($this->services['translation.loader.ini']) ? $this->services['translation.loader.ini'] : ($this->services['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader())) && false ?: '_'});
$instance->addLoader('json', ${($_ = isset($this->services['translation.loader.json']) ? $this->services['translation.loader.json'] : ($this->services['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader())) && false ?: '_'});

return $instance;
